// src/Modules/User/user.module.ts
import { Module } from '@nestjs/common';
import { TypeOrmModule } from '@nestjs/typeorm';
import { UserService } from './user.service';
import { UserController } from './user.controller';
import { User } from './entities/user.entity';

@Module({
  imports: [TypeOrmModule.forFeature([User])],
  controllers: [UserController],
  providers: [UserService],
  exports: [UserService, TypeOrmModule], // üëà permite uso em outros m√≥dulos (ex: AuthModule, OrderModule)
})
export class UserModule {}

/*
Hist√≥rico de altera√ß√µes:
Edi√ß√£o: 25/10/2025 - 01:45
- Atualizado para exportar UserService e TypeOrmModule (para uso em autentica√ß√£o e integra√ß√£o com pedidos)
--------------------------------------------
Explica√ß√£o da l√≥gica:
O m√≥dulo User agrupa toda a l√≥gica relacionada a usu√°rios: entidade, controller e servi√ßo.
Agora exporta o servi√ßo e o reposit√≥rio para permitir integra√ß√£o com m√≥dulos de autentica√ß√£o,
pedidos e sincroniza√ß√£o Bling ERP.
by: gabbu (github: gabriellesote) ‚úß
*/
